name: CI

on: [push, pull_request]

jobs:
  windows-sln:
    name: Windows sln ${{ matrix.Configuration }} ${{ matrix.Platform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        Configuration: [Debug, Debug(StaticCRT), Profile, Profile(StaticCRT), Release, Release(StaticCRT)]
        Platform: [x64]
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive

    - uses: microsoft/setup-msbuild@main
    - name: Build libs
      working-directory: SDK/source/SoundEngine
      run: msbuild /m /p:Configuration="${{ matrix.Configuration }}" /p:Platform="${{ matrix.Platform }}" AllWindowsSoundEngine_vc170.sln
    - name: Build IntegrationDemo
      working-directory: SDK/samples/IntegrationDemo/Windows
      run: msbuild /m /p:Configuration="${{ matrix.Configuration }}" /p:Platform="${{ matrix.Platform }}" IntegrationDemo_Windows_vc170.sln

    - name: Upload artifacts
      uses: actions/upload-artifact@main
      with:
        name: IntegrationDemo.${{ matrix.Configuration }}.${{ matrix.Platform }}.sln.ci-${{ github.run_number }}
        path: SDK/${{ matrix.Platform }}_vc170/${{ matrix.Configuration }}/bin/*.[ed][xl][el] # exe or dll

  linux-cmake:
    name: linux cmake ${{ matrix.CMake.Configuration }} ${{ matrix.Platform }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        CMake:
          - Configuration: Debug
            BuildType: Debug
          - Configuration: Profile
            BuildType: Profile
          - Configuration: Final
            BuildType: Release
        Platform: [x64]
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive

    - name: Install libs
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev clang ninja-build
    - name: Build
      run: |
        export CC=clang && export CXX=clang++
        ${CXX} --version && cmake --version
        cd SDK && mkdir build && cd build
        cmake .. -G Ninja -DGAME_PLATFORM=${{ matrix.Platform }} -DGAME_CONFIG=${{ matrix.CMake.Configuration }} -DCMAKE_BUILD_TYPE=${{ matrix.CMake.BuildType }}
        ninja
